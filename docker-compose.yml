version: "3"

services:
  api:
    build: ./backend/
    command: uvicorn api:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    environment:
      - ENVIRONMENT=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`littlevisions.meevy.me`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.app.middlewares=redirect-to-https"
      - "traefik.http.routers.app-secure.rule=Host(`littlevisions.meevy.me`)"
      - "traefik.http.routers.app-secure.entrypoints=websecure"
      - "traefik.http.routers.app-secure.tls=true"
      - "traefik.http.routers.app-secure.tls.certresolver=myresolver"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
    ports:
      - "8000:8000"

  # frontend:
  #   build:
  #     context: "./frontend"
  #   volumes:
  #     - ./dist:/app/dist
  #   ports:
  #     - 8080:8080
  nginx:
    container_name: "nginx"
    build: ./nginx
    # restart: always
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  dist:
